plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version '0.9.4'
}
import org.apache.tools.ant.taskdefs.condition.Os

def checkMac() {
    return Os.isFamily(Os.FAMILY_MAC)
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    namespace 'moe.astar.telegramw'
    compileSdk 34

    defaultConfig {
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        buildConfigField "String", "TELEGRAM_API_ID", "\"${properties.getProperty('TELEGRAM_API_ID')}\""
        buildConfigField "String", "TELEGRAM_API_HASH", "\"${properties.getProperty('TELEGRAM_API_HASH')}\""
        applicationId "moe.astar.telegramw"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "0.0.1"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug

    }
    experimentalProperties["android.experimental.art-profile-r8-rewriting"] = true
    experimentalProperties["android.experimental.r8.dex-startup-optimization"] = true
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.14'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'

    implementation 'androidx.compose.material3:material3:1.2.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    //noinspection GradleDependency
    implementation "androidx.compose.ui:ui:$compose_version"
    //noinspection GradleDependency
    implementation "androidx.wear.compose:compose-material:$wear_compose_version"
    //noinspection GradleDependency
    implementation "androidx.wear.compose:compose-foundation:$wear_compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.3'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.wear:wear-input:1.2.0-alpha02'
    implementation 'androidx.compose.material:material-icons-extended:1.6.8'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    //noinspection GradleDependency
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    //noinspection GradleDependency
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.wear.compose:compose-navigation:1.3.1"
    implementation 'androidx.compose.runtime:runtime-livedata:1.6.8'

    implementation 'com.google.zxing:core:3.5.0' // QR code generation
    implementation 'org.osmdroid:osmdroid-android:6.1.13' // OSM Maps
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1' // Video

    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"

    //noinspection GradleDependency
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'

    implementation "androidx.navigation:navigation-compose:2.7.7"

    implementation project(':libtd')
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "androidx.datastore:datastore:1.1.1"
    implementation "com.google.protobuf:protobuf-javalite:3.22.3"
    implementation("io.coil-kt:coil:2.5.0")
    implementation("androidx.compose.animation:animation-graphics:1.6.8")
    implementation("io.coil-kt:coil-gif:2.3.0")
    implementation("io.coil-kt:coil-compose:2.5.0")
    implementation "com.airbnb.android:lottie-compose:6.0.0"
    implementation("io.coil-kt:coil-video:2.3.0")
    implementation "androidx.core:core-splashscreen:1.0.1"
}

protobuf {
    protoc {
        if (checkMac()) {
            artifact = "com.google.protobuf:protoc:3.14.0:osx-x86_64"
        } else {
            artifact = "com.google.protobuf:protoc:3.14.0"
        }
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}